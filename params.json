{
  "name": "PowerNV QEMU guest",
  "tagline": "",
  "body": "A year ago, Benjamin Herrenschmidt pushed a QEMU tree on github :\r\n\r\n     https://github.com/ozbenh/qemu/\r\n\r\nadding a new PowerPC platform. PowerNV (as Non-Virtualized) is the\r\n\"baremetal\" platform using the OPAL firmware. It runs Linux on IBM and\r\nOpen Power systems and it can be used as an hypervisor OS, running KVM\r\nguests, or simply as a host OS.\r\n\r\nThe QEMU tree Benjamin has pushed is mostly used to test 'skiboot', a\r\ncomponent of OPAL, as a part of a regression testsuite. It is also\r\nquite useful for distro development, especially when you can't access\r\nreal hardware to test your code on the host.\r\n\r\nBelow is a port of this work on a recent version of QEMU adding a\r\ncouple of new features such as IPMI.\r\n\r\n* to clone the updated QEMU tree and compile :\r\n\r\n    https://github.com/legoater/qemu/tree/powernv-ipmi\t\t(stable 2.6)\r\n\r\n    https://github.com/legoater/qemu/tree/powernv-ipmi-2.7\t(next)\r\n\r\n* you will need a customized skiboot for the QEMU platform. You can find it here :\r\n\r\n    https://github.com/legoater/skiboot/tree/master\r\n\r\n  or just download this [skiboot.lid](http://www.kaod.org/openpower/qemu/skiboot.lid) file.\r\n\r\n* to boot, get a skiroot kernel and rootfs. You can find them on the OpenPOWER build site :\r\n\r\n    https://openpower.xyz/job/openpower-op-build/distro=ubuntu,target=palmetto/lastSuccessfulBuild/artifact/images/\r\n\r\n  or use these [zImage.epapr](http://www.kaod.org/openpower/qemu/zImage.epapr) and [rootfs.cpio.xz](http://www.kaod.org/openpower/qemu/rootfs.cpio.xz) files.\r\n\r\n* run with :\r\n\r\n```\r\ndrive=./fedora23-ppc64le.qcow2\r\nqemu-system-ppc64 -m 2G -machine powernv,accel=tcg -cpu POWER8 \\\r\n\t-device virtio-net,netdev=netdev0,disable-modern=false \\\r\n\t-netdev user,id=netdev0,hostfwd=::20022-:22,hostname=pnv \\\r\n\t-device virtio-blk,drive=drive0,disable-modern=false \\\r\n\t-drive file=${drive},if=none,id=drive0 \\\r\n\t-device ipmi-bmc-sim,sdrfile=./palmetto-SDR.bin,fruareasize=256,frudatafile=./palmetto-FRU.bin,id=bmc0 \\\r\n\t-device isa-ipmi-bt,bmc=bmc0,irq=10 \\\r\n\t-kernel ./zImage.epapr  \\\r\n\t-initrd ./rootfs.cpio.xz \\\r\n\t-bios ./skiboot.lid \\\r\n\t-nographic -nodefaults\r\n```\r\n\r\n  NOTE about using virtio:\r\n\r\n  There's a bug (yet to investigate) that prevents virtio devices to\r\n  guess the endianness of the guest. As a consequence, legacy virtio\r\n  devices are always considered to run big-endian, but the skiroot\r\n  kernel runs little-endian, so the driver will fail.\r\n\r\n  The solution is to use virtio 1.0 devices because they always run\r\n  little-endian per specification. This is achieved with the\r\n  disable-modern=false property, that can be passed to any instance\r\n  of any virtio device type. It is also possible to pass this property\r\n  to all instances of a given class with:\r\n\r\n```\r\n    -global virtio-blk-pci.disable-modern=false\r\n```\r\n\r\n* then just log on : \r\n\r\n```\r\n    $ ssh -p 20022 root@localhost\r\n    \r\n    root@pnv:~# cat /proc/cpuinfo \r\n    processor\t: 0\r\n    cpu\t: POWER8 (raw), altivec supported\r\n    clock\t: 1000.000000MHz\r\n    revision\t: 2.0 (pvr 004d 0200)\r\n    timebase\t: 512000000\r\n    platform\t: PowerNV\r\n    model\t: IBM PowerNV (emulated by qemu)\r\n    machine\t: PowerNV IBM PowerNV (emulated by qemu)\r\n    firmware\t: OPAL v3\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}